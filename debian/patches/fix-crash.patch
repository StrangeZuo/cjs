Author: Michael Webster <miketwebster@gmail.com>
Description: [PATCH] object.cpp: Defer processing an object, rather than crash,
 when a toggle unref is already queued.

This prioritizes the originally queued toggle direction.

Fixes https://github.com/linuxmint/cinnamon/issues/9916
at least until:
https://github.com/linuxmint/cjs/pull/96

Origin: https://github.com/linuxmint/cjs/commit/abac3ad19b6dcdc8aa63073913d37badf824ee69
---
 gi/object.cpp | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/gi/object.cpp b/gi/object.cpp
index a8363be1..b8d775f0 100644
--- a/gi/object.cpp
+++ b/gi/object.cpp
@@ -1263,13 +1263,16 @@ static void wrapped_gobj_toggle_notify(void*, GObject* gobj,
          */
         if (is_main_thread) {
             if (G_UNLIKELY (toggle_up_queued || toggle_down_queued)) {
-                g_error("toggling down object %s that's already queued to toggle %s\n",
-                        G_OBJECT_TYPE_NAME(gobj),
+                g_critical("toggling down object %s (%p) that's already queued to toggle %s\n",
+                        G_OBJECT_TYPE_NAME(gobj), gobj,
                         toggle_up_queued && toggle_down_queued? "up and down" :
                         toggle_up_queued? "up" : "down");
+
+                toggle_queue.enqueue(gobj, ToggleQueue::DOWN, toggle_handler);
+            } else {
+                ObjectInstance::for_gobject(gobj)->toggle_down();
             }
 
-            ObjectInstance::for_gobject(gobj)->toggle_down();
         } else {
             toggle_queue.enqueue(gobj, ToggleQueue::DOWN, toggle_handler);
         }
